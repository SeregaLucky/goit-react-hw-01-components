{"version":3,"sources":["components/Profile/Profile.module.css","components/Stats/StatList/StatsList.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/Stats/Stats.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionLine/TransactionLine.module.css","components/Stats/dataStats.js","components/Profile/Profile.js","components/Stats/StatList/StatsList.js","components/Stats/Stats.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionLine/TransactionLine.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js"],"names":["module","exports","stats","id","label","percentage","Profile","user","avatar","location","name","tag","className","styles","profileSection","profile","description","src","alt","text","list","item","textSpan","followers","views","likes","StatsList","renderNumverForColor","firstColor","Math","round","random","secondColor","thirdColor","map","key","style","background","span","Stats","title","statsSection","FriendListItem","freind","isOnline","statusTrue","statusFalse","avatarPhoto","width","FriendList","allFreindItems","friends","friendList","TransactionLine","type","amount","currency","line","TransactionHistory","allTransactionLine","items","transactionHistory","tableHeader","App","dataStats","dataFreindsList","dataItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d53245b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileSection\":\"Profile_profileSection__2VY5h\",\"profile\":\"Profile_profile__1JT_O\",\"description\":\"Profile_description__3OWvk\",\"avatar\":\"Profile_avatar__36JbN\",\"text\":\"Profile_text__2N9Cn\",\"list\":\"Profile_list__sbu8U\",\"item\":\"Profile_item__2p2DL\",\"textSpan\":\"Profile_textSpan__2QDg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"StatsList_list__W64rm\",\"item\":\"StatsList_item__1JC9G\",\"span\":\"StatsList_span__2VifP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3Z19H\",\"status\":\"FriendListItem_status__1KXfY\",\"statusTrue\":\"FriendListItem_statusTrue__3zEtp FriendListItem_status__1KXfY\",\"statusFalse\":\"FriendListItem_statusFalse__qm_uV FriendListItem_status__1KXfY\",\"avatarPhoto\":\"FriendListItem_avatarPhoto__1GwG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__1y6jI\",\"stats\":\"Stats_stats__1cI85\",\"title\":\"Stats_title__2mg7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3IWVe\",\"tableHeader\":\"TransactionHistory_tableHeader__18ZeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__29usA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"TransactionLine_line__3786v\"};","const stats = [\r\n  { id: 'id-1', label: '.docx', percentage: 22 },\r\n  { id: 'id-2', label: '.pdf', percentage: 4 },\r\n  { id: 'id-3', label: '.mp3', percentage: 17 },\r\n  { id: 'id-4', label: '.psd', percentage: 47 },\r\n  { id: 'id-5', label: '.pdf', percentage: 10 },\r\n];\r\n\r\nexport default stats;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './Profile.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Profile = ({ user: { avatar, location, name, tag, stats } }) => {\r\n  return (\r\n    <section className={styles.profileSection}>\r\n      <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n          <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n          <p className={styles.text}>{name}</p>\r\n          <p className={styles.text}>@{tag}</p>\r\n          <p className={styles.text}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.list}>\r\n          <li className={styles.item}>\r\n            <span className={styles.textSpan}>Followers</span>\r\n            <span className={styles.textSpan}>{stats.followers}</span>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <span className={styles.textSpan}>Views</span>\r\n            <span className={styles.textSpan}>{stats.views}</span>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <span className={styles.textSpan}>Likes</span>\r\n            <span className={styles.textSpan}>{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: T.shape({\r\n    name: T.string.isRequired,\r\n    tag: T.string.isRequired,\r\n    location: T.string.isRequired,\r\n    avatar: T.string.isRequired,\r\n\r\n    stats: T.shape({\r\n      followers: T.number.isRequired,\r\n      views: T.number.isRequired,\r\n      likes: T.number.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './StatsList.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst StatsList = ({ list }) => {\r\n  const renderNumverForColor = () => {\r\n    let firstColor = Math.round((Math.random() * 1000) / 4);\r\n    firstColor = firstColor < 50 ? firstColor + 50 : firstColor;\r\n\r\n    let secondColor = Math.round((Math.random() * 1000) / 4);\r\n    secondColor = secondColor < 50 ? secondColor + 50 : secondColor;\r\n\r\n    let thirdColor = Math.round((Math.random() * 1000) / 4);\r\n    thirdColor = thirdColor < 50 ? thirdColor + 50 : thirdColor;\r\n\r\n    return `${firstColor}, ${secondColor}, ${thirdColor}`;\r\n  };\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {list.map(item => (\r\n        <li\r\n          key={item.id}\r\n          className={styles.item}\r\n          style={{ background: `rgb(${renderNumverForColor()})` }}\r\n        >\r\n          <span className={styles.span}>{item.label}</span>\r\n          <span className={styles.span}>{item.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatsList.propTypes = {\r\n  list: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      label: T.string.isRequired,\r\n      percentage: T.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default StatsList;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './Stats.module.css';\r\n/* import - COMPONENT */\r\nimport StatsList from './StatList/StatsList';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Stats = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statsSection}>\r\n      <div className={styles.stats}>\r\n        {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n        <StatsList list={stats} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  title: T.string.isRequired,\r\n  stats: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      label: T.string.isRequired,\r\n      percentage: T.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default Stats;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './FriendListItem.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst FriendListItem = ({ freind }) => {\r\n  const { avatar, name, isOnline } = freind;\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      {isOnline ? (\r\n        <span className={styles.statusTrue} />\r\n      ) : (\r\n        <span className={styles.statusFalse} />\r\n      )}\r\n      <img className={styles.avatarPhoto} src={avatar} alt=\"ava\" width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  freind: T.shape({\r\n    avatar: T.string.isRequired,\r\n    name: T.string.isRequired,\r\n    isOnline: T.bool.isRequired,\r\n    id: T.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './FriendList.module.css';\r\n/* import - COMPONENTS */\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst FriendList = ({ friends }) => {\r\n  const allFreindItems = friends.map(freind => (\r\n    <FriendListItem key={freind.id} freind={freind} />\r\n  ));\r\n\r\n  return <ul className={styles.friendList}>{allFreindItems}</ul>;\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: T.arrayOf(\r\n    T.shape({\r\n      avatar: T.string.isRequired,\r\n      name: T.string.isRequired,\r\n      isOnline: T.bool.isRequired,\r\n      id: T.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './TransactionLine.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst TransactionLine = ({ item }) => {\r\n  const { type, amount, currency } = item;\r\n\r\n  return (\r\n    <tr className={styles.line}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionLine.propTypes = {\r\n  item: T.shape({\r\n    id: T.string.isRequired,\r\n    type: T.string.isRequired,\r\n    amount: T.string.isRequired,\r\n    currency: T.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default TransactionLine;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './TransactionHistory.module.css';\r\n/* import - COMPONENTS */\r\nimport TransactionLine from './TransactionLine/TransactionLine';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst TransactionHistory = ({ items }) => {\r\n  const allTransactionLine = items.map(item => (\r\n    <TransactionLine key={item.id} item={item} />\r\n  ));\r\n\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead className={styles.tableHeader}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{allTransactionLine}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      type: T.string.isRequired,\r\n      amount: T.string.isRequired,\r\n      currency: T.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\n/* import - CSS */\r\nimport './App.css';\r\n/* import - DATA */\r\nimport user from '../Profile/user.json';\r\nimport dataStats from '../Stats/dataStats';\r\nimport dataFreindsList from '../FriendList/dataFreindsList.json';\r\nimport dataItems from '../TransactionHistory/transactions.json';\r\n/* import - COMPONENT */\r\nimport Profile from '../Profile/Profile';\r\nimport Stats from '../Stats/Stats';\r\nimport FriendList from '../FriendList/FriendList';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst App = () => (\r\n  <>\r\n    <Profile user={user} />\r\n    <Stats title=\"Upload stats\" stats={dataStats} />\r\n    <FriendList friends={dataFreindsList} />\r\n    <TransactionHistory items={dataItems} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n/* import - CSS */\r\nimport './index.css';\r\n/* import - COMPONENT */\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}